EKS Setup
Follow
Updated: 7 days ago
Create EKS Cluster
Install kubectl version 1.23 and the newest versions of eksctl, helm, and awscli, it's mandatory.

Create an EKS cluster with three node groups with the following script:

Open zero-eksctl.yaml and edit availabilityZones, region in the cluster section, and availabilityZones in the nodegroups section per your needs. You can also edit the VPC CIDR and cluster name. Save the file, then run eksctl:

$ eksctl create cluster -f zero-eksctl.yaml --profile ${AWS_PROFILE}
This creates a new VPC. Find the VPC ID using this CLI command:

$ VPC_ID=$(aws ec2 describe-vpcs --region ${AWS_REGION} --filter Name=tag:Name,Values=eksctl-${CLUSTER_NAME}-cluster/VPC --query 'Vpcs[].VpcId' --output text)
Replace the cluster name with the value you set.

Or find it from the AWS Management Console. You will need to use it shortly.

Get AWS account ID

$ AWS_ACCOUNT=$(aws sts get-caller-identity --profile ${AWS_PROFILE} --query 'Account' --output text)
Create an IAM policy.

Download an IAM policy for the AWS Load Balancer Controller so it can make calls to AWS APIs on your behalf.

AWS GovCloud (US-East) or AWS GovCloud (US-West) AWS regions

$ curl -o iam_policy_us-gov.json https://raw.githubusercontent.com/kubernetes-sigs/aws-load-balancer-controller/v2.4.3/docs/install/iam_policy_us-gov.json
All other AWS regions

$ curl -o iam_policy.json https://raw.githubusercontent.com/kubernetes-sigs/aws-load-balancer-controller/v2.4.3/docs/install/iam_policy.json
Create an IAM policy using the policy downloaded in the previous step. If you downloaded iam_policy_us-gov.json then rename it to iam_policy.json before running the command.

$ aws iam create-policy --policy-name AWSLoadBalancerControllerIAMPolicy --policy-document file://iam_policy.json
Get account number and create IAM service account.

eksctl create iamserviceaccount \
--cluster=${CLUSTER_NAME} \
--namespace=kube-system \
--name=aws-load-balancer-controller \
--role-name "AmazonEKSLoadBalancerControllerRoleZero" \
--attach-policy-arn=arn:aws:iam::{AWS_ACCOUNT}:policy/AWSLoadBalancerControllerIAMPolicy \
--approve --profile ${AWS_PROFILE} --region ${AWS_REGION}
$ kubectl annotate serviceaccount -n kube-system aws-load-balancer-controller eks.amazonaws.com/sts-regional-endpoints=true 
Load balancing is handled by ALB (Application Load Balancer), which is created when ZERO pods are provisioned within Kubernetes.

Update the Helm Repository
Use the following script to update the Helm repository:

$ helm repo add eks https://aws.github.io/eks-charts
$ helm repo add secrets-store-csi-driver https://kubernetes-sigs.github.io/secrets-store-csi-driver/charts
$ helm repo update
Install Application Load Balancer
$ helm install aws-load-balancer-controller eks/aws-load-balancer-controller \
  -n kube-system --set clusterName=${CLUSTER_NAME} \
  --set serviceAccount.create=false \
  --set serviceAccount.name=aws-load-balancer-controller \
  --set region=${AWS_REGION} \
  --set vpcId=${VPC_ID} \
  --set image.repository=602401143452.dkr.ecr.${AWS_REGION}.amazonaws.com/amazon/aws-load-balancer-controller
Note: Replace AWS_REGION and VPC_ID with the values for your organization.

602401143452 may also be a different value depending on the region you're going to deploy; refer to the list of Amazon container image registries.

 
Install the Kubernetes Secrets driver
Install the Kubernetes Secrets store CSI driver:

$ helm install -n kube-system --set syncSecret.enabled=true csi-secrets-store secrets-store-csi-driver/secrets-store-csi-driver

$ kubectl apply -f https://raw.githubusercontent.com/aws/secrets-store-csi-driver-provider-aws/main/deployment/aws-provider-installer.yaml
 

Create an IAM policy

POLICY_ARN=$(aws --profile ${AWS_PROFILE} --region ${AWS_REGION} --query Policy.Arn --output text iam create-policy --policy-name secretsmanager-policy --policy-document '{
"Version": "2012-10-17",
"Statement": [
{
"Effect": "Allow",
"Action": [
"secretsmanager:GetSecretValue",
"secretsmanager:DescribeSecret"
],
"Resource": "*"
},
{
"Effect": "Allow",
"Action": "ecr:*",
"Resource": "*"
}
]
}')
Create the service account to be used by the pod and associate the above IAM policy with that service account.

eksctl create iamserviceaccount --name secretsmanager-policy-sa --profile=${AWS_PROFILE} --region=${AWS_REGION} --cluster ${CLUSTER_NAME} --attach-policy-arn "$POLICY_ARN" --approve --override-existing-serviceaccounts
Deploy EKS Services
Before executing the next command, make sure to update certificate ARN in ingress section. See more details in Preparation page SSL Certificate section.

$ kubectl apply -f zero-connect.yaml
 After completion go to EC2 --> LoadBalancer , there you'll find a new ELB instance prefixed with zero-connect. Take the DNS name and open it in the browser.