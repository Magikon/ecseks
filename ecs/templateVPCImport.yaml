---
AWSTemplateFormatVersion: '2010-09-09'
Description: 'VPC: template'
Resources:
  VPC:
    Type: 'AWS::EC2::VPC'
    DeletionPolicy: "Retain"
  SubnetAPublic:
    Type: 'AWS::EC2::Subnet'
    DeletionPolicy: "Retain"
    Properties:
      AvailabilityZone: !Select [0, !GetAZs '']
      MapPublicIpOnLaunch: true
      VpcId: !Ref VPC
  SubnetAPrivate:
    Type: 'AWS::EC2::Subnet'
    DeletionPolicy: "Retain"
    Properties:
      AvailabilityZone: !Select [0, !GetAZs '']
      VpcId: !Ref VPC
  SubnetBPublic:
    Type: 'AWS::EC2::Subnet'
    DeletionPolicy: "Retain"
    Properties:
      AvailabilityZone: !Select [1, !GetAZs '']
      MapPublicIpOnLaunch: true
      VpcId: !Ref VPC
  SubnetBPrivate:
    Type: 'AWS::EC2::Subnet'
    DeletionPolicy: "Retain"
    Properties:
      AvailabilityZone: !Select [1, !GetAZs '']
      VpcId: !Ref VPC
  SubnetCPublic:
    Type: 'AWS::EC2::Subnet'
    DeletionPolicy: "Retain"
    Properties:
      AvailabilityZone: !Select [2, !GetAZs '']
      MapPublicIpOnLaunch: true
      VpcId: !Ref VPC
  SubnetCPrivate:
    Type: 'AWS::EC2::Subnet'
    DeletionPolicy: "Retain"
    Properties:
      AvailabilityZone: !Select [2, !GetAZs '']
      VpcId: !Ref VPC
# Outputs:
  # TemplateID:
    # Description: 'template id'
    # Value: 'vpc'
  # TemplateVersion:
    # Description: 'template version.'
    # Value: '0.1.1'
  # StackName:
    # Description: 'Stack name.'
    # Value: !Sub '${AWS::StackName}'
  # CidrBlock:
    # Description: 'The set of IP addresses for the VPC.'
    # Value: !GetAtt 'VPC.CidrBlock'
    # Export:
      # Name: !Sub '${AWS::StackName}-CidrBlock'
  # VPC:
    # Description: 'VPC.'
    # Value: !Ref VPC
    # Export:
      # Name: !Sub '${AWS::StackName}-VPC'
  # SubnetsPublic:
    # Description: 'Subnets public.'
    # Value: !Join [',', [!Ref SubnetAPublic, !Ref SubnetBPublic, !Ref SubnetCPublic]]
    # Export:
      # Name: !Sub '${AWS::StackName}-SubnetsPublic'
  # SubnetsPrivate:
    # Description: 'Subnets private.'
    # Value: !Join [',', [!Ref SubnetAPrivate, !Ref SubnetBPrivate, !Ref SubnetCPrivate]]
    # Export:
      # Name: !Sub '${AWS::StackName}-SubnetsPrivate'
  # SubnetAPublic:
    # Description: 'Subnet A public.'
    # Value: !Ref SubnetAPublic
    # Export:
      # Name: !Sub '${AWS::StackName}-SubnetAPublic'
  # SubnetAPrivate:
    # Description: 'Subnet A private.'
    # Value: !Ref SubnetAPrivate
    # Export:
      # Name: !Sub '${AWS::StackName}-SubnetAPrivate'
  # SubnetBPublic:
    # Description: 'Subnet B public.'
    # Value: !Ref SubnetBPublic
    # Export:
      # Name: !Sub '${AWS::StackName}-SubnetBPublic'
  # SubnetBPrivate:
    # Description: 'Subnet B private.'
    # Value: !Ref SubnetBPrivate
    # Export:
      # Name: !Sub '${AWS::StackName}-SubnetBPrivate'
  # SubnetCPublic:
    # Description: 'Subnet C public.'
    # Value: !Ref SubnetCPublic
    # Export:
      # Name: !Sub '${AWS::StackName}-SubnetCPublic'
  # SubnetCPrivate:
    # Description: 'Subnet C private.'
    # Value: !Ref SubnetCPrivate
    # Export:
      # Name: !Sub '${AWS::StackName}-SubnetCPrivate'
